;적 1체를 공격하는 경우
@SKILL_SINGLE_ATTACK(TARGETV,USERV,SKILLV,ISENEMY=0,WIDE=0)
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LNUM
#DIM DYNAMIC TARGETV
#DIM DYNAMIC USERV
#DIM DYNAMIC SKILLV
#DIM DYNAMIC DAMAGEV
#DIM DYNAMIC ISENEMY;적이 공격하고 있는 경우
#DIM DYNAMIC WIDE

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN
#DIM DYNAMIC USERNUM
SELECTCASE ISENEMY
    CASE 0
        USERNUM = FLAG:USERV
    CASE 1
        USERNUM = TFLAG:USERV
    CASE 2
        USERNUM = 게스트
ENDSELECT

CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
IF !ISENEMY || ISENEMY == 2
    CFLAG:USERNUM:전회공격상대 = TARGETV
    CFLAG:USERNUM:전회보조행동 = 0
    IF ISBASUTE(USERNUM,5) && SKILLV == 0
        CALL BATTLE_TALK("ENRAGEATTACK",USERV,,,ISENEMY)
    ELSE
        SIF !WIDE
            CALL BATTLE_TALK("SKILL",USERV,,SKILLV,ISENEMY)
        IF !RESULT && !WIDE
            PRINTFORML %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
            PRINT ...
            WAITANYKEY
        ENDIF
    ENDIF
    ;1~6로 전달되는 TARGETV를 실제 값으로 변환
    TARGETV = TFLAG:TARGETV
ELSEIF ISENEMY == 1
    CFLAG:USERNUM:전회공격상대 = TARGETV
    CFLAG:USERNUM:전회보조행동 = 0
    ;CALL ENEMY_BATTLETALK("SKILL",NO:USERV,,SKILLV)
    ;SIF !RESULT
    IF !WIDE
        PRINTFORML ({USERV}) %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
        PRINT ...
        WAITANYKEY
    ENDIF
    TARGETV = FLAG:TARGETV
ENDIF
IF RAND:100 <= (100-SKILL_DATA:8)+(BASE:TARGETV:회피율)-(SKILL_DATA:9)
    ;MISS
    SIF WIDE
        PRINTFORM %조사처리(CALLNAME:TARGETV,"을")% 노린 공격은 
    PRINTL 빗나갔다!
    SIF !ISENEMY && !WIDE
        CALL BATTLE_TALK("MISS",USERV,,,ISENEMY)
    ;ELSEIF ISENEMY
    WAITANYKEY
ELSE
    IF !ISENEMY
        USERV = USERNUM
    ELSEIF ISENEMY == 2
        USERV = 게스트
    ELSEIF ISENEMY
        USERV = USERNUM
    ENDIF
    SELECTCASE SKILL_DATA:6
        CASE 0
            ;공격력 기반
            DAMAGEV = ((BASE:USERV:공격력) * (120-RAND:40)) / 100
            DAMAGEV = SKILL_CALC_ARMOR(TARGETV,SKILL_DATA:7,DAMAGEV)
        CASE 1,2,3
            ;패기/예리/자비 대미지는 스탯 제곱근 * 베이스값 또한 난수에 의한 변동폭이 작다
            DAMAGEV = ((SKILL_DATA:4 * SQRT(BASE:USERV:(1+SKILL_DATA:6)) * (107-RAND:14))) / 100
            DAMAGEV = SKILL_CALC_ARMOR(TARGETV,SKILL_DATA:7,DAMAGEV)
        CASE 4
            ;고정값
            DAMAGEV = SKILL_DATA:4
            DAMAGEV = SKILL_CALC_ARMOR(TARGETV,SKILL_DATA:7,DAMAGEV)
    ENDSELECT
    ;격앙처리
    SIF (CFLAG:USERV:상태이상 & 16) != 0
        TIMES DAMAGEV, 1.20
    SIF (CFLAG:USERV:상태이상 & 16) != 0
        TIMES DAMAGEV, 1.20
    ;공격력 버프 처리
    IF (CFLAG:USERV:버프적용중 & 2) != 0
        DAMAGEV = ((DAMAGEV * (100+(버프위력:USERV:1))) / 100)
    ENDIF
    ;HP 감소
    BASE:TARGETV:희망 -= DAMAGEV
    ;상태이상부여    
    CALL SKILL_MAKE_EFFECT(SKILLV,USERV,TARGETV)
    IF DAMAGEV != 0
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% {DAMAGEV} 피해를 받았다!
    ENDIF
    SIF RESULT:0 == 2
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 이미 쓰러져있다.
    SIF RESULT:0 == 1
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 힘이 다해 쓰러졌다.
    SIF RESULT:1 == 2
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 이미 독에 걸려있다.
    SIF RESULT:1 == 1
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 독에 걸렸다!
    SIF RESULT:2 == 2
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 이미 피를 흘리고 있다.
    SIF RESULT:2 == 1
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 피를 흘리고 있다!
    SIF RESULT:3 == 2
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 이미 겁을 먹고 있다.
    SIF RESULT:3 == 1
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 공포에 떨고 있다!
    SIF RESULT:4 == 2
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 이미 흥분해 있다.
    SIF RESULT:4 == 1
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% 제어할 수 없는 분노에 빠졌다!
    WAITANYKEY
    IF (CFLAG:TARGETV:버프적용중 & 1) != 0
        CALL EFFECT_COUNTER_ATTACK(TARGETV,USERV,ISENEMY^1)
    ENDIF
    ;페널티 부여
    SIF !WIDE
        CALL APPLY_SKILL_PENALTY(USERV,SKILL_DATA:스킬_페널티,SKILL_DATA:스킬_페널티베이스)

    IF BASE:TARGETV:희망 <= 0 && (CFLAG:TARGETV:상태이상 & 1) != 1
        CFLAG:TARGETV:상태이상 += 1
        BASE:TARGETV:희망 = 0
    ENDIF
ENDIF

;적 전체 공격
@SKILL_ALL_ATTACK(USERV,SKILLV,ISENEMY=0)
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC USERV
#DIM DYNAMIC SKILLV
#DIM DYNAMIC ISENEMY

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN
#DIM DYNAMIC USERNUM
SELECTCASE ISENEMY
    CASE 0
        USERNUM = FLAG:USERV
    CASE 1
        USERNUM = TFLAG:USERV
    CASE 2
        USERNUM = 게스트
ENDSELECT
IF !ISENEMY
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ELSE
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ENDIF
IF !ISENEMY || ISENEMY == 2
    CFLAG:USERNUM:전회공격상대 = 7
    CFLAG:USERNUM:전회보조행동 = 0
    CALL BATTLE_TALK("SKILL",USERV,,SKILLV,ISENEMY)
    SIF !RESULT
        PRINTFORML %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
    PRINT ...
    WAITANYKEY
ELSEIF ISENEMY == 1
    CFLAG:USERNUM:전회공격상대 = 7
    CFLAG:USERNUM:전회보조행동 = 0
    ;CALL ENEMY_BATTLETALK("SKILL",NO:USERV,,SKILLV)
    ;SIF !RESULT
        PRINTFORML ({USERV}) %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
    PRINT ...
    WAITANYKEY
ENDIF

IF !ISENEMY
    FOR LCOUNT,1,7
        SIF TFLAG:LCOUNT != 0 && !BATTLE_CANNOTTARGET(TFLAG:LCOUNT)
            CALL SKILL_SINGLE_ATTACK(LCOUNT,USERV,SKILLV,0,1)
    NEXT
ELSEIF ISENEMY
    FOR LCOUNT,1,3
        CALL SKILL_SINGLE_ATTACK(LCOUNT,USERV,SKILLV,0,1)
    NEXT
ENDIF
;페널티 부여
CALL APPLY_SKILL_PENALTY(USERV,SKILL_DATA:스킬_페널티,SKILL_DATA:스킬_페널티베이스)

@SKILL_HEAL_SELF(USERV,SKILLV,ISENEMY=0)
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC USERV
#DIM DYNAMIC SKILLV
#DIM DYNAMIC ISENEMY
#DIM DYNAMIC DAMAGEV

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN

#DIM DYNAMIC ISOVERHEALED
#DIM DYNAMIC USERNUM
SELECTCASE ISENEMY
    CASE 0
        USERNUM = FLAG:USERV
    CASE 1
        USERNUM = TFLAG:USERV
    CASE 2
        USERNUM = 게스트
ENDSELECT
IF !ISENEMY
    CFLAG:USERNUM:전회공격상대 = 0
    CFLAG:USERNUM:전회보조행동 = 1
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ELSE
    CFLAG:USERNUM:전회공격상대 = 0
    CFLAG:USERNUM:전회보조행동 = 1
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ENDIF
IF !ISENEMY || ISENEMY == 2
    CALL BATTLE_TALK("SKILL",USERV,,SKILLV,ISENEMY)
    SIF !RESULT
        PRINTFORML %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
    SIF BASE:USERNUM:희망 >= MAXBASE:USERNUM:희망
        ISOVERHEALED = 1
ELSEIF ISENEMY == 1
    PRINTFORML ({USERV}) %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
    SIF BASE:USERNUM:희망 >= MAXBASE:USERNUM:희망
        ISOVERHEALED = 1
ENDIF
PRINT ...
WAITANYKEY
IF !ISENEMY
    USERV = USERNUM
    CFLAG:USERNUM:전회보조행동 = 1
ELSEIF ISENEMY
    USERV = USERNUM
    CFLAG:USERNUM:전회보조행동 = 1
ENDIF

IF SKILL_DATA:8 == 0 || RAND:100 > (100-SKILL_DATA:8)
    SELECTCASE SKILL_DATA:6
        CASE 0
            ;공격력 기반
            DAMAGEV = ((BASE:USERV:공격력) * (120-RAND:40)) / 100
        CASE 1,2,3
            ;패기/예리/자비 대미지는 스탯 제곱근 * 베이스값 또한 난수에 의한 변동폭이 작다
            DAMAGEV = ((SKILL_DATA:4 * SQRT(BASE:USERV:(1+SKILL_DATA:6)) * (107-RAND:14))) / 100
        CASE 4
            ;고정값
            DAMAGEV = SKILL_DATA:4
    ENDSELECT
    BASE:USERV:희망 += DAMAGEV
    ;오버힐 스킬이 아닌 경우 체력을 최대치 이하로 한다
    ;이미 오버힐 받아 체력이 높은 상태였던 경우 줄이지 않는다
    IF (BASE:USERV:희망 > MAXBASE:USERV:희망) && (SKILL_DATA:16 == 0) && !ISOVERHEALED
        BASE:USERV:희망 = MAXBASE:USERV:희망
    ENDIF
    IF DAMAGEV != 0
        PRINTFORML %조사처리(CALLNAME:USERV,"은")% {DAMAGEV} 만큼 회복했다!
        WAITANYKEY
    ENDIF
    CALL SKILL_MAKE_EFFECT(SKILLV,USERV,USERV)
ELSE
    ;스킬 실패    
    PRINTL 실패했다!
    IF !ISENEMY
        CALL BATTLE_TALK("MISS",USERV,,,ISENEMY)
    ELSEIF ISENEMY
        WAITANYKEY
    ENDIF
ENDIF
;페널티 부여
CALL APPLY_SKILL_PENALTY(USERV,SKILL_DATA:스킬_페널티,SKILL_DATA:스킬_페널티베이스)

;아군 중 다른 대상을 회복,또는 버프 부여하는 경우
@SKILL_HEAL_OTHER(TARGETV,USERV,SKILLV,ISENEMY=0,WIDE=0)
#DIM DYNAMIC NUMV
#DIM DYNAMIC TARGETV
#DIM DYNAMIC USERV
#DIM DYNAMIC SKILLV
#DIM DYNAMIC ISENEMY
#DIM DYNAMIC WIDE;전체대상 실행중인가?

#DIM DYNAMIC DAMAGEV

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN
#DIM DYNAMIC ISOVERHEALED
#DIM DYNAMIC USERNUM
SELECTCASE ISENEMY
    CASE 0
        USERNUM = FLAG:USERV
    CASE 1
        USERNUM = TFLAG:USERV
    CASE 2
        USERNUM = 게스트
ENDSELECT

IF !ISENEMY
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ELSE
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ENDIF
IF !ISENEMY
    IF !WIDE
        CFLAG:USERNUM:전회공격상대 = 0
        CFLAG:USERNUM:전회보조행동 = 1
        CALL BATTLE_TALK("SKILL",USERV,,SKILLV,ISENEMY)
        SIF !RESULT
            PRINTFORML %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
        PRINT ...
        WAITANYKEY
    ENDIF
    TARGETV = FLAG:TARGETV
    SIF BASE:(FLAG:TARGETV):희망 > MAXBASE:(FLAG:TARGETV):희망
        ISOVERHEALED = 1
ELSEIF ISENEMY
    IF !WIDE
        CFLAG:USERNUM:전회공격상대 = 0
        CFLAG:USERNUM:전회보조행동 = 1
        PRINTFORML %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
        PRINT ...
        WAITANYKEY
    ENDIF
    SIF BASE:(TFLAG:TARGETV):희망 > MAXBASE:(TFLAG:TARGETV):희망
        ISOVERHEALED = 1
    NUMV = TARGETV
    TARGETV = TFLAG:TARGETV
ENDIF

IF RAND:100 <- (100-SKILL_DATA:8)
    ;MISS
    IF WIDE
        SIF ISENEMY
            PRINTFORM ({NUMV}) 
        PRINTFORM %조사처리(CALLNAME:TARGETV,"을")% 대상으로 한 스킬은 
    ENDIF
    PRINTL 실패했다!
    SIF !ISENEMY && !WIDE
        CALL BATTLE_TALK("MISS",USERV,,,ISENEMY)
    WAITANYKEY
ELSE
    IF !ISENEMY
        USERV = USERNUM
    ELSEIF ISENEMY
        USERV = USERNUM
    ENDIF
    SELECTCASE SKILL_DATA:6
        CASE 0
            ;공격력 기반
            DAMAGEV = ((BASE:USERV:공격력) * (120-RAND:40)) / 100
        CASE 1,2,3
            ;패기/예리/자비 대미지는 스탯 제곱근 * 베이스값 또한 난수에 의한 변동폭이 작다
            DAMAGEV = ((SKILL_DATA:4 * SQRT(BASE:USERV:(1+SKILL_DATA:6)) * (107-RAND:14))) / 100
        CASE 4
            ;고정값
            DAMAGEV = SKILL_DATA:4
    ENDSELECT
    BASE:TARGETV:희망 += DAMAGEV
    ;오버힐 스킬이 아닌 경우 체력을 최대치 이하로 한다
    ;이미 오버힐 받아 체력이 높은 상태였던 경우 줄이지 않는다
    IF (BASE:TARGETV:희망 > MAXBASE:TARGETV:희망) && (SKILL_DATA:16 == 0) && !ISOVERHEALED
        BASE:TARGETV:희망 = MAXBASE:TARGETV:희망
    ENDIF
    
    CALL SKILL_MAKE_EFFECT(SKILLV,TARGETV,TARGETV)

    IF DAMAGEV != 0
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% {DAMAGEV} 만큼 회복했다!
        WAITANYKEY
    ENDIF
    SIF !WIDE
        CALL APPLY_SKILL_PENALTY(USERV,SKILL_DATA:스킬_페널티,SKILL_DATA:스킬_페널티베이스)
ENDIF

@SKILL_ALL_HEAL(USERV,SKILLV,ISENEMY=0)
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC USERV
#DIM DYNAMIC SKILLV
#DIM DYNAMIC ISENEMY

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN
#DIM DYNAMIC USERNUM
SELECTCASE ISENEMY
    CASE 0
        USERNUM = FLAG:USERV
    CASE 1
        USERNUM = TFLAG:USERV
    CASE 2
        USERNUM = 게스트
ENDSELECT
IF !ISENEMY
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ELSE
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ENDIF

IF !ISENEMY || ISENEMY == 2
    CFLAG:USERNUM:전회공격상대 = 0
    CFLAG:USERNUM:전회보조행동 = 1
    CALL BATTLE_TALK("SKILL",USERV,,SKILLV,ISENEMY)
    IF !RESULT
        PRINTFORML %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
        PRINT ...
        WAITANYKEY
    ENDIF
ELSE
    CFLAG:USERNUM:전회공격상대 = 0
    CFLAG:USERNUM:전회보조행동 = 1
        PRINTFORML ({USERV}) %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
    PRINT ...
    WAITANYKEY
ENDIF
IF !ISENEMY
    FOR LCOUNT,1,3
        CALL SKILL_HEAL_OTHER(LCOUNT,USERV,SKILLV,0,1)
    NEXT
ELSEIF ISENEMY
    FOR LCOUNT,1,7
        SIF TFLAG:LCOUNT != 0 && !BATTLE_CANNOTTARGET(TFLAG:LCOUNT)
            CALL SKILL_HEAL_OTHER(LCOUNT,USERV,SKILLV,1,1)
    NEXT
ENDIF
;페널티 부여
CALL APPLY_SKILL_PENALTY(USERV,SKILL_DATA:스킬_페널티,SKILL_DATA:스킬_페널티베이스)

@SKILL_GUARD(USERV,SKILLV,ISENEMY=0)
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC USERV
#DIM DYNAMIC SKILLV
#DIM DYNAMIC ISENEMY

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN
#DIM DYNAMIC USERNUM
SELECTCASE ISENEMY
    CASE 0
        USERNUM = FLAG:USERV
    CASE 1
        USERNUM = TFLAG:USERV
    CASE 2
        USERNUM = 게스트
ENDSELECT
IF !ISENEMY
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ELSE
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ENDIF
IF !ISENEMY || ISENEMY == 2
    IF SKILLV == 1
        CALL BATTLE_TALK("GUARD",USERV,,,ISENEMY)
    ELSE
        CALL BATTLE_TALK("SKILL",USERV,,SKILLV,ISENEMY)
    ENDIF
    SIF !RESULT
        PRINTFORML %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
ELSEIF ISENEMY == 1
    PRINTFORML ({USERV}) %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
ENDIF
PRINT ...
WAITANYKEY
IF !ISENEMY
    USERV = USERNUM
    CFLAG:USERNUM:전회보조행동 = 0
ELSEIF ISENEMY
    USERV = USERNUM
    CFLAG:USERNUM:전회보조행동 = 0
ENDIF
;부가효과
CALL SKILL_MAKE_EFFECT(SKILLV,USERV,USERV)

;아직 예정이 없지만) 방어를 방해하는 요소가 있다면 여기에
CFLAG:USERV:방어 = 1
;페널티 부여
CALL APPLY_SKILL_PENALTY(USERV,SKILL_DATA:스킬_페널티,SKILL_DATA:스킬_페널티베이스)

;도주 및 도주 스킬. 부가효과 미실장
@SKILL_ESCAPE(USERV,SKILLV,ISENEMY=0)
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC USERV
#DIM DYNAMIC SKILLV
#DIM DYNAMIC ISENEMY

#DIM DYNAMIC TOTAL_ENEMY_LV
#DIM DYNAMIC MODV

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN
#DIM DYNAMIC USERNUM
SELECTCASE ISENEMY
    CASE 0
        USERNUM = FLAG:USERV
    CASE 1
        USERNUM = TFLAG:USERV
    CASE 2
        USERNUM = 게스트
ENDSELECT
IF !ISENEMY
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ELSE
    CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERNUM
ENDIF
;구상 출력
IF !ISENEMY || ISENEMY == 2
    IF SKILLV == 11
        CALL BATTLE_TALK("ESCAPE",USERV,,,ISENEMY)
    ELSE
        CALL BATTLE_TALK("SKILL",USERV,,SKILLV,ISENEMY)
    ENDIF
    SIF !RESULT
        PRINTFORML %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
    PRINTL ...
    WAITANYKEY
ELSEIF ISENEMY == 1
    PRINTFORML ({USERV}) %조사처리(CALLNAME:USERNUM,"은")% %SKILL_TEXT%
    PRINTL ...
    WAITANYKEY
ENDIF

;레벨에 의한 확률 보정치 계산
IF !ISENEMY
    ;도주하는 것이 아군일때
    FOR LCOUNT,1,7
        SIF TFLAG:LCOUNT
            TOTAL_ENEMY_LV += BASE:(TFLAG:LCOUNT):레벨
    NEXT
    MODV = BASE:USERNUM:레벨 - (TOTAL_ENEMY_LV / TFLAG:적캐릭터초기화)
ELSE
    ;도주하는 것이 적일때
    MODV = BASE:USERNUM:레벨 - ((BASE:(FLAG:1):레벨 + BASE:(FLAG:2):레벨) / 2)
ENDIF
TIMES MODV, 2

IF MODV >= 100 - (SKILL_DATA:8)
    MODV = 100 - (SKILL_DATA:8)
ELSEIF MODV <= -(SKILL_DATA:8)
    MODV = -(SKILL_DATA:8)
ENDIF
SELECTCASE RAND:100
    CASE 0 TO MODV+(SKILL_DATA:8)
        PRINTL 도망쳤다!
        PRINTL ...
        WAITANYKEY
        ;도주처리
        IF !ISENEMY
            CALL BATTLE_TALK("ESCAPE_SUCC",USERV,,,ISENEMY)
            CALL BATTLE_TALK("ESCAPE_SUCC",USERV^3,1,,ISENEMY)
            TFLAG:전투결과 == 3
        ELSE
            ;도주하는 것이 적:
            ENEMY_GONE:USERNUM:0 = 1
        ENDIF
    CASEELSE
        PRINTL 실패했다!
        WAITANYKEY
        SIF !ISENEMY
            CALL BATTLE_TALK("ESCAPE_FAIL",USERV,,,ISENEMY)
        ;도주실패
ENDSELECT
;페널티 부여
CALL APPLY_SKILL_PENALTY(USERV,SKILL_DATA:스킬_페널티,SKILL_DATA:스킬_페널티베이스)

@SKILL_CALC_ARMOR(TARGETV,DEFENDV,DAMAGEV)
#FUNCTION
#DIM DYNAMIC TARGETV
#DIM DYNAMIC DEFENDV
#DIM DYNAMIC DAMAGEV

#DIM DYNAMIC DEFSTATVALUE

SELECTCASE DEFENDV
    CASE 0
        ;방어 무시
        RETURNF DAMAGEV
    CASE 1
        ;방어력 계산 시 예리 *2의 제곱근 + 방어력으로 나눈다
        DEFSTATVALUE = (SQRT((BASE:TARGETV:예리 * 2) + BASE:TARGETV:방어력) + 1)
        SIF (CFLAG:TARGETV:버프적용중 & 4) != 0
            DEFSTATVALUE = ((DEFSTATVALUE * (100+(버프위력:TARGETV:2))) / 100)
        DAMAGEV = DAMAGEV / DEFSTATVALUE
        SIF CFLAG:TARGETV:방어
            TIMES DAMAGEV, 0.50
        RETURNF DAMAGEV
    CASE 2
        ;방어력 반감
        DEFSTATVALUE = (SQRT((BASE:TARGETV:예리 * 2) + BASE:TARGETV:방어력)/2 + 1)
        SIF (CFLAG:TARGETV:버프적용중 & 4) != 0
            DEFSTATVALUE = ((DEFSTATVALUE * (100+(버프위력:TARGETV:2))) / 100)
        DAMAGEV = DAMAGEV / DEFSTATVALUE
        SIF CFLAG:TARGETV:방어
            TIMES DAMAGEV, 0.50
        RETURNF DAMAGEV
    CASE 3
        ;전체HP비례피해
        RETURNF MAXBASE:TARGETV:희망 * (DAMAGEV/100)
ENDSELECT

@EFFECT_COUNTER_ATTACK(USERV,TARGETV,ISENEMY=0)
#DIM DYNAMIC USERV
#DIM DYNAMIC TARGETV
#DIM DYNAMIC ISENEMY
#DIM DYNAMIC DAMAGEV

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN

CALLFORM SKILL_DATA_{0},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERV

IF (!ISENEMY || ISENEMY)
    CALL BATTLE_TALK("COUNTER",CFLAG:USERV:1,,,ISENEMY)
ELSE
    PRINTFORML %조사처리(CALLNAME:USERV,"은")% 반격을 구사했다.
ENDIF
PRINT ...
WAITANYKEY
IF RAND:100 <= (100-SKILL_DATA:9)+(BASE:TARGETV:회피율)-(SKILL_DATA:9)
    PRINTL 빗나갔다!
    WAITANYKEY
ELSE
    DAMAGEV = ((BASE:USERV:공격력) * (120-RAND:40)) / 100
    DAMAGEV = SKILL_CALC_ARMOR(TARGETV,SKILL_DATA:7,DAMAGEV)
    ;격앙처리
    SIF (CFLAG:USERV:상태이상 & 16) != 0
        TIMES DAMAGEV, 1.20
    SIF (CFLAG:USERV:상태이상 & 16) != 0
        TIMES DAMAGEV, 1.20
    ;HP 감소
    BASE:TARGETV:희망 -= DAMAGEV
    
    DAMAGEV = (DAMAGEV * COUNTER_POWER:USERV:0) / 10

    SIF DAMAGEV != 0
        PRINTFORML %조사처리(CALLNAME:TARGETV,"은")% {DAMAGEV} 피해를 받았다!
    WAITANYKEY
ENDIF

@APPLY_SKILL_PENALTY(USERV,PENALTYV,BASEV)
#DIM DYNAMIC USERV
#DIM DYNAMIC PENALTYV
#DIM DYNAMIC BASEV

SELECTCASE PENALTYV
    CASE 1
        ;둔화 - 일정 턴 동안 속도를 느리게 한다. ATB가감속에 음수 가산
        CFLAG:USERV:ATB감속 += (BASE:USERV:행동력 / 2)
        ATB가감속지속시간:USERV:1 += BASEV
    CASE 2
        ;가속 - 둔화의 반대. 페널티랄까 사용자 버프 정도.
        CFLAG:USERV:ATB가속 += (BASE:USERV:행동력 / 2)
        ATB가감속지속시간:USERV:0 += BASEV
ENDSELECT

@SKILL_MAKE_EFFECT(SKILLV,USERV,TARGETV)
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC SKILLV
#DIM DYNAMIC USERV
#DIM DYNAMIC TARGETV

#DIM DYNAMIC NUMV
#DIM DYNAMIC BASUTECHECK;bit연산으로 거는 상태이상 체크
#DIM DYNAMIC BASUTECHANCE,5;상태이상 확률 기록
#DIM DYNAMIC BASUTESUCCESS,5;상태이상 성공여부?
#DIM DYNAMIC RESISTV;상태이상 저항 값

#DIMS DYNAMIC SKILL_NAME
#DIMS DYNAMIC SKILL_HELP
#DIMS DYNAMIC SKILL_TEXT
#DIMS DYNAMIC SKILL_DESCRIPTION
#DIM DYNAMIC SKILL_DATA,SKILL_DATA_LEN

CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERV
FOR LCOUNT,스킬_부가효과,스킬_부가효과2+2,2
    IF SKILL_DATA:LCOUNT != 0
        SELECTCASE SKILL_DATA:LCOUNT
            CASE 1;즉사부여
                IF (BASUTECHECK & 1) == 0
                    BASUTECHECK += 1
                    BASUTECHANCE:0 = SKILL_DATA:(LCOUNT+1)
                ENDIF
            CASE 2;독부여
                IF (BASUTECHECK & 2) == 0
                    BASUTECHECK += 2
                    BASUTECHANCE:1 = SKILL_DATA:(LCOUNT+1)
                ENDIF
            CASE 3;출혈부여
                IF (BASUTECHECK & 4) == 0
                    BASUTECHECK += 4
                    BASUTECHANCE:2 = SKILL_DATA:(LCOUNT+1)
                ENDIF
            CASE 4;공포부여
                IF (BASUTECHECK & 8) == 0
                    BASUTECHECK += 8
                    BASUTECHANCE:3 = SKILL_DATA:(LCOUNT+1)
                ENDIF
            CASE 5;격앙부여
                IF (BASUTECHECK & 16) == 0
                    BASUTECHECK += 16
                    BASUTECHANCE:4 = SKILL_DATA:(LCOUNT+1)
                ENDIF
            CASE 6;카운터부여
                SIF (CFLAG:TARGETV:버프적용중 & 1) != 0
                    CFLAG:TARGETV:버프적용중 -= 1
                CFLAG:TARGETV:버프적용중 += 1
                버프지속시간:TARGETV:0 = 2;발동 턴에 한번 사라지므로 2로 한다.
                COUNTER_POWER:TARGETV:0 = SKILL_DATA:(LCOUNT+1)
            CASE 7;공격력버프 소
                SIF (CFLAG:TARGETV:버프적용중 & 2) == 0
                    CFLAG:TARGETV:버프적용중 += 2
                버프지속시간:TARGETV:1 == SKILL_DATA:(LCOUNT+1)
                버프위력:TARGETV:1 = 50
            CASE 8;방어력버프 소
                SIF (CFLAG:TARGETV:버프적용중 & 4) == 0
                    CFLAG:TARGETV:버프적용중 += 4
                버프지속시간:TARGETV:2 == SKILL_DATA:(LCOUNT+1)
                버프위력:TARGETV:2 = 50
            CASE 9;공격력버프 중
                SIF (CFLAG:TARGETV:버프적용중 & 2) == 0
                    CFLAG:TARGETV:버프적용중 += 2
                버프지속시간:TARGETV:1 == SKILL_DATA:(LCOUNT+1)
                버프위력:TARGETV:1 = 80
            CASE 10;방어력버프 중
                SIF (CFLAG:TARGETV:버프적용중 & 4) == 0
                    CFLAG:TARGETV:버프적용중 += 4
                버프지속시간:TARGETV:2 == SKILL_DATA:(LCOUNT+1)
                버프위력:TARGETV:2 = 80
            CASE 11;공격력버프 대
                SIF (CFLAG:TARGETV:버프적용중 & 2) == 0
                    CFLAG:TARGETV:버프적용중 += 2
                버프지속시간:TARGETV:1 == SKILL_DATA:(LCOUNT+1)
                버프위력:TARGETV:1 = 110
            CASE 12;방어력버프 대
                SIF (CFLAG:TARGETV:버프적용중 & 4) == 0
                    CFLAG:TARGETV:버프적용중 += 4
                버프지속시간:TARGETV:2 == SKILL_DATA:(LCOUNT+1)
                버프위력:TARGETV:2 = 110
            CASE 13;아이템 소모
                IF !ITEM_CONSUMED_ONCE && SKILL_DATA:(LCOUNT+1) != 0
                    ITEM:(SKILL_DATA:(LCOUNT+1)) --
                    PRINTFORML %ITEMNAME:(SKILL_DATA:(LCOUNT+1))% 1개를 나눠 마셨다.
                    WAITANYKEY
                    ITEM_CONSUMED_ONCE = SKILL_DATA:(LCOUNT+1)
                ENDIF
            CASE 14;SP 회복
                CALLFORM SKILL_DATA_{SKILLV},SKILL_NAME,SKILL_HELP,SKILL_TEXT,SKILL_DESCRIPTION,SKILL_DATA,USERV
                IF SKILL_DATA:(LCOUNT+1) != 0
                    BASE:TARGETV:영혼 += SKILL_DATA:(LCOUNT+1)
                    SIF BASE:TARGETV:영혼 > MAXBASE:TARGETV:영혼
                        BASE:TARGETV:영혼 = MAXBASE:TARGETV:영혼
                    PRINTFORML %CALLNAME:TARGETV%의 SP가 {SKILL_DATA:(LCOUNT+1)} 만큼 회복했다!
                    WAITANYKEY
                ENDIF
            CASE 15;상태이상 치유
                SELECTCASE SKILL_DATA:(LCOUNT+1)
                    CASE 0;즉사 제외 전부치유
                        FOR LCOUNT2,2,6
                            SIF ISBASUTE(TARGETV,LCOUNT2)
                                CFLAG:TARGETV:상태이상 -= POWER(2,LCOUNT2)
                        NEXT
                    CASE 1;일반
                        IF ISDYING(TARGETV)
                            CFLAG:TARGETV:상태이상 -= 1
                            BASE:TARGETV:희망 = 5
                        ENDIF
                    CASE 2 TO 5;일반상태이상
                        SIF ISBASUTE(TARGETV,SKILL_DATA:(LCOUNT+1))
                            CFLAG:TARGETV:상태이상 -= POWER(2,SKILL_DATA:(LCOUNT+1))
                ENDSELECT
        ENDSELECT
    ENDIF
NEXT
FOR LCOUNT,0,5
    SIF BASUTECHANCE:LCOUNT <= 0
        CONTINUE
    IF LCOUNT == 0
        NUMV = 1
    ELSE
        NUMV = POWER(2,LCOUNT)
    ENDIF
    IF (BASUTECHECK & NUMV) != 0
        ;상태이상판정
        RESISTV = 0
        IF LCOUNT == 0
            RESISTV = 50 * BASE:TARGETV:즉사내성
        ELSEIF LCOUNT == 1
            RESISTV = 20 * BASE:TARGETV:독내성
        ELSEIF LCOUNT == 2
            RESISTV = 20 * BASE:TARGETV:출혈내성
        ELSEIF LCOUNT == 3
            RESISTV = 20 * BASE:TARGETV:공포내성
        ELSEIF LCOUNT == 4
            RESISTV = 20 * BASE:TARGETV:격앙내성
        ENDIF
        IF (RAND:100 + RESISTV) <= BASUTECHANCE:LCOUNT
            BASUTESUCCESS:LCOUNT = 1
            IF (CFLAG:TARGETV:상태이상 & NUMV) != 0
                BASUTESUCCESS:LCOUNT = 2
            ELSE
                ;여기서 실제로 상태이상 부여
                CFLAG:TARGETV:상태이상 += NUMV
                ;상태이상 지속시간 부여
                SELECTCASE LCOUNT
                    CASE 1
                        상태이상시간:TARGETV:LCOUNT = (8 - (2 * BASE:TARGETV:독내성))
                    CASE 2
                        상태이상시간:TARGETV:LCOUNT = (8 - (2 * BASE:TARGETV:출혈내성))
                    CASE 3
                        상태이상시간:TARGETV:LCOUNT = (6 - (BASE:TARGETV:공포내성))
                    CASE 4
                        상태이상시간:TARGETV:LCOUNT = (6 - (BASE:TARGETV:격앙내성))
                ENDSELECT
            ENDIF
        ENDIF
    ENDIF
NEXT

RETURN BASUTESUCCESS:0,BASUTESUCCESS:1,BASUTESUCCESS:2,BASUTESUCCESS:3,BASUTESUCCESS:4