;3D 던전 그래픽의 출력 외 함수 정의 ERB
;
;D3D_CHECK_WALL
;벽판정 전달받은 좌표와 DA를 참조해서,
;사방에 벽이 있는지 판정 각각 RESULT:0~3에 전달한다(NESW 순)
;
@D3D_CHECK_WALL(XCOORD,YCOORD,DIRECTION=-1,JUDGEBYCOVER=0)
#DIM DYNAMIC XCOORD
#DIM DYNAMIC YCOORD
#DIM DYNAMIC DIRECTION
#DIM DYNAMIC JUDGEBYCOVER;겉으로만 보고 판단

#DIM DYNAMIC LCOUNT

#DIM DYNAMIC RESULTVALUE,4
#DIM DYNAMIC CARDINAL,4,2
#DIM DYNAMIC T_CARDINAL,4 = 0,1,2,3;TARGET_CARDINAL

#DIMS DYNAMIC TILES

;검사하는 위치가 맵 범위를 벗어난다면
IF XCOORD > D3D_CURRENT_MAPXSIZE || XCOORD < 0 || YCOORD > D3D_CURRENT_MAPYSIZE || YCOORD < 0
    RETURN 1,1,1,1
ENDIF

CARDINAL:0:0 = 0,-1
CARDINAL:1:0 = 1,0
CARDINAL:2:0 = 0,1
CARDINAL:3:0 = -1,0

;지정된 방향 또는 플레이어의 방향에 따라 실제로는 다른 방향을 판단
SIF DIRECTION == -1
    DIRECTION = D3D_PLAYER_DIRECTION
SELECTCASE DIRECTION
    CASE 1
        T_CARDINAL:0 = 1,2,3,0
    CASE 2
        T_CARDINAL:0 = 2,3,0,1
    CASE 3
        T_CARDINAL:0 = 3,0,1,2
ENDSELECT

IF !JUDGEBYCOVER
    FOR LCOUNT,0,4
        {
            IF XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0 < 0 ||
            XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0 >= D3D_CURRENT_MAPXSIZE ||
            YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1 < 0 ||
            YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1 >= D3D_CURRENT_MAPYSIZE
        }
            RESULTVALUE:LCOUNT = 1
            CONTINUE
        ENDIF
        SELECTCASE (D3D_CURRENT_MAPDATA:(XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0):(YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1)) % 10
            CASE -1
                RESULTVALUE:LCOUNT = 1
            CASE 0
                RESULTVALUE:LCOUNT = 1
            CASE 2
                IF D3D_CURRENT_MAPDATA:(XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0):(YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1) == 12
                    RESULTVALUE:LCOUNT = 0
                ELSE
                    RESULTVALUE:LCOUNT = 2
                ENDIF
            CASE 4
                IF D3D_CURRENT_MAPDATA:(XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0):(YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1) == 24
                    RESULTVALUE:LCOUNT = 1
                ELSE
                    RESULTVALUE:LCOUNT = 0
                ENDIF
            CASE 5
                RESULTVALUE:LCOUNT = 1
            CASE 8;출구;테스트
                RESULTVALUE:LCOUNT = 0
            CASEELSE
                RESULTVALUE:LCOUNT = 0
        ENDSELECT
    NEXT
ELSEIF JUDGEBYCOVER
    FOR LCOUNT,0,4
        {
            IF XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0 < 0 ||
            XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0 >= D3D_CURRENT_MAPXSIZE ||
            YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1 < 0 ||
            YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1 >= D3D_CURRENT_MAPYSIZE
        }
            RESULTVALUE:LCOUNT = 1
            CONTINUE
        ENDIF
        CALL D3D_GET_TILE((XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0),(YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1))
        TILES = %RESULTS%

        RESETCOLOR
        SELECTCASE TILES
            CASE "■","　"," "
                RESULTVALUE:LCOUNT = 1
            CASE "문","扉"
                {
                    IF D3D_CURRENT_MAPDATA:(D3D_PLAYER_XCOORD):(D3D_PLAYER_YCOORD) == 2 ||
                    D3D_CURRENT_MAPDATA:(XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0):(YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1) == 12
                }
                    RESULTVALUE:LCOUNT = 0
                ELSE
                    RESULTVALUE:LCOUNT = 2
                ENDIF
            CASE "출","出"
                IF D3D_CURRENT_MAPDATA:(D3D_PLAYER_XCOORD):(D3D_PLAYER_YCOORD) == 8
                    RESULTVALUE:LCOUNT = 0
                ELSE
                    RESULTVALUE:LCOUNT = 2
                ENDIF
            CASE "暗"
                RESULTVALUE:LCOUNT = 2
            CASE "□","보","덫","승","강","↑", "→", "↓", "←","Ｔ","ｔ","Ｅ","ｍ","宝","罠","降","昇"
                RESULTVALUE:LCOUNT = 0
            CASE "Ｘ"
                RESULTVALUE:LCOUNT = 0
            CASE "！"
                IF D3D_CURRENT_MAPDATA:(XCOORD+CARDINAL:(T_CARDINAL:LCOUNT):0):(YCOORD+CARDINAL:(T_CARDINAL:LCOUNT):1) == 24
                    RESULTVALUE:LCOUNT = 1
                ELSE
                    RESULTVALUE:LCOUNT = 0
                ENDIF
            CASEELSE
                RESULTVALUE:LCOUNT = 0
        ENDSELECT
    NEXT
ELSE
    RESULTVALUE:0 = 1,1,1,1
ENDIF


RETURN RESULTVALUE:0,RESULTVALUE:1,RESULTVALUE:2,RESULTVALUE:3
;
;D3D_GET_LEFT~BEHIND
;D3D_PLAYER_DIRECTION을 참고해서 플레이어 주시방향 기준 왼오앞뒤 방향 획득
;RESULT:0~2에 저장(0은 목표 X좌표 보정치, 1은 Y좌표, 2는 0~3(NESW))
;

@D3D_GET_LEFT
#DIM DYNAMIC TARGET_CARDINAL
#DIM DYNAMIC CARDINAL,4,2
CARDINAL:0:0 = 0,-1
CARDINAL:1:0 = 1,0
CARDINAL:2:0 = 0,1
CARDINAL:3:0 = -1,0
SELECTCASE D3D_PLAYER_DIRECTION
    CASE 0
        TARGET_CARDINAL = 3
    CASE 1
        TARGET_CARDINAL = 0
    CASE 2
        TARGET_CARDINAL = 1
    CASE 3
        TARGET_CARDINAL = 2
ENDSELECT
RETURN CARDINAL:TARGET_CARDINAL:0,CARDINAL:TARGET_CARDINAL:1,TARGET_CARDINAL
@D3D_GET_RIGHT
#DIM DYNAMIC TARGET_CARDINAL
#DIM DYNAMIC CARDINAL,4,2
CARDINAL:0:0 = 0,-1
CARDINAL:1:0 = 1,0
CARDINAL:2:0 = 0,1
CARDINAL:3:0 = -1,0
SELECTCASE D3D_PLAYER_DIRECTION
    CASE 0
        TARGET_CARDINAL = 1
    CASE 1
        TARGET_CARDINAL = 2
    CASE 2
        TARGET_CARDINAL = 3
    CASE 3
        TARGET_CARDINAL = 0
ENDSELECT
RETURN CARDINAL:TARGET_CARDINAL:0,CARDINAL:TARGET_CARDINAL:1,TARGET_CARDINAL
@D3D_GET_FRONT
#DIM DYNAMIC TARGET_CARDINAL
#DIM DYNAMIC CARDINAL,4,2
CARDINAL:0:0 = 0,-1
CARDINAL:1:0 = 1,0
CARDINAL:2:0 = 0,1
CARDINAL:3:0 = -1,0
SELECTCASE D3D_PLAYER_DIRECTION
    CASE 0
        TARGET_CARDINAL = 0
    CASE 1
        TARGET_CARDINAL = 1
    CASE 2
        TARGET_CARDINAL = 2
    CASE 3
        TARGET_CARDINAL = 3
ENDSELECT
RETURN CARDINAL:TARGET_CARDINAL:0,CARDINAL:TARGET_CARDINAL:1,TARGET_CARDINAL
@D3D_GET_BEHIND
#DIM DYNAMIC TARGET_CARDINAL
#DIM DYNAMIC CARDINAL,4,2
CARDINAL:0:0 = 0,-1
CARDINAL:1:0 = 1,0
CARDINAL:2:0 = 0,1
CARDINAL:3:0 = -1,0
SELECTCASE D3D_PLAYER_DIRECTION
    CASE 0
        TARGET_CARDINAL = 2
    CASE 1
        TARGET_CARDINAL = 3
    CASE 2
        TARGET_CARDINAL = 0
    CASE 3
        TARGET_CARDINAL = 1
ENDSELECT
RETURN CARDINAL:TARGET_CARDINAL:0,CARDINAL:TARGET_CARDINAL:1,TARGET_CARDINAL
;
;D3D_GET_LEFT~BEHIND_COORD
;D3D_PLAYER_DIRECTION을 참고해서 플레이어 주시방향 기준 왼오앞뒤 좌표 획득
;RESULT:0~1에 저장
;
@D3D_GET_LEFT_COORD(XCOORD,YCOORD)
#DIM DYNAMIC XCOORD
#DIM DYNAMIC YCOORD
CALL D3D_GET_LEFT
RETURN XCOORD+RESULT:0,YCOORD+RESULT:1
@D3D_GET_RIGHT_COORD(XCOORD,YCOORD)
#DIM DYNAMIC XCOORD
#DIM DYNAMIC YCOORD
CALL D3D_GET_RIGHT
RETURN XCOORD+RESULT:0,YCOORD+RESULT:1
@D3D_GET_FRONT_COORD(XCOORD,YCOORD)
#DIM DYNAMIC XCOORD
#DIM DYNAMIC YCOORD
CALL D3D_GET_FRONT
RETURN XCOORD+RESULT:0,YCOORD+RESULT:1
@D3D_GET_BEHIND_COORD(XCOORD,YCOORD)
#DIM DYNAMIC XCOORD
#DIM DYNAMIC YCOORD
CALL D3D_GET_BEHIND
RETURN XCOORD+RESULT:0,YCOORD+RESULT:1

;D3D_CHANGE_DIRECTION
;1 또는 -1을 받아서 D3D_PLAYER_DIRECTION 광역변수 조작
;1 또는 -1이 아닌 값을 전달받으면 0 반환
;
@D3D_CHANGE_DIRECTION(VALUE)
#DIM DYNAMIC VALUE
;1은 시계방향회전 -1은 반시계방향회전 2는 뒤로 돌기
SIF VALUE != 1 && VALUE != -1 && VALUE != 2
    RETURN 0
D3D_PLAYER_DIRECTION = (D3D_PLAYER_DIRECTION + VALUE)%4
IF D3D_PLAYER_DIRECTION > 3
    D3D_PLAYER_DIRECTION = 0
ELSEIF D3D_PLAYER_DIRECTION < 0
    D3D_PLAYER_DIRECTION = 3
ENDIF
RETURN 1
;
;D3D_AUTOFLIP
;던전 진입 시 방향을 자동으로 판단해 D3D_PLAYER_DIRECTION 광역변수 조작
;SYSTEM_DUNGEON.ERB\MAKE_FLOOR 함수 처리 종단에서 호출
;
@D3D_AUTOFLIP
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC TARGET_DIRECTION=0
#DIM DYNAMIC CARDINAL,4,2
CARDINAL:0:0 = 0,-1;북
CARDINAL:1:0 = 1,0;동
CARDINAL:2:0 = 0,1;남
CARDINAL:3:0 = -1,0;서

SELECTCASE D3D_CURRENT_MAPDATA:(D3D_PLAYER_XCOORD):(D3D_PLAYER_YCOORD) % 10
    CASE -9,6,7,8;초기 위치가 터미널,회복샘,엘리베이터,계단
        CALL D3D_CHECK_WALL(D3D_PLAYER_XCOORD,D3D_PLAYER_YCOORD,0,0)
        FOR LCOUNT,3,-1,-1
            SELECTCASE RESULT:LCOUNT
                CASE 0,2
                    TARGET_DIRECTION = LCOUNT
                CASEELSE
                    LCOUNT2 += 1
            ENDSELECT
        NEXT
    CASEELSE
        CALL D3D_CHECK_WALL(D3D_PLAYER_XCOORD,D3D_PLAYER_YCOORD,0,0)
        FOR LCOUNT,3,-1,-1
            IF D3D_CURRENT_MAPDATA:(D3D_PLAYER_XCOORD+(CARDINAL:LCOUNT:0)):(D3D_PLAYER_YCOORD+(CARDINAL:LCOUNT:1)) % 10 == 8
                ;인접한 출구가 있다면 그 반대방향으로 목표 방향을 설정한다
                SELECTCASE LCOUNT
                    CASE 0,1
                        TARGET_DIRECTION = LCOUNT + 2
                    CASE 2,3
                        TARGET_DIRECTION = LCOUNT - 2
                ENDSELECT
            ENDIF
        NEXT
ENDSELECT
D3D_PLAYER_DIRECTION = TARGET_DIRECTION

;
;D3D_WALL_OR_FLOOR
;벽인지 바닥인지 구분하여 텍스트버튼을 묘사하는데 쓰는 함수
;현재방향 기준으로 해당 위치가 겉보기에 벽인지 판정하여, 
;3번째 인수에 해당하는 면의 결과를 전달(벽이면 1 반환)
;
@D3D_WALL_OR_FLOOR(XCOORD,YCOORD,PLANE=2)
#DIM DYNAMIC XCOORD
#DIM DYNAMIC YCOORD
#DIM DYNAMIC PLANE
#DIM DYNAMIC LNUM=0


SELECTCASE PLANE
    CASE 0
        DEBUGPRINTFORML D3D_WALL_OR_FLOOR 함수에 전달된 제3인수 {PLANE}는 적절하지 않음
        RETURN XCOORD,YCOORD,0
    CASE 1
        LNUM = 3
        CALL D3D_GET_RIGHT_COORD(XCOORD,YCOORD)
    CASE 2
        LNUM = 0
        CALL D3D_GET_BEHIND_COORD(XCOORD,YCOORD)
    CASE 3
        LNUM = 1
        CALL D3D_GET_LEFT_COORD(XCOORD,YCOORD)
    CASEELSE
        DEBUGPRINTFORML D3D_WALL_OR_FLOOR 함수에 전달된 제3인수 {PLANE}는 적절하지 않음
        RETURN XCOORD,YCOORD,0
ENDSELECT
CALL D3D_CHECK_WALL(RESULT:0,RESULT:1,-1,1)

RETURN XCOORD,YCOORD,RESULT:LNUM

;타일 아이콘 획득
;종류 추가할 필요가 있음
@D3D_GET_TILE(XCOORD,YCOORD)
#DIM DYNAMIC XCOORD
#DIM DYNAMIC YCOORD
SELECTCASE D3D_CURRENT_MAPDATA:XCOORD:YCOORD % 10
    CASE -1
        RESULTS '= "　"
        GETDEFCOLOR
        SETCOLOR RESULT
    CASE 0
        RESULTS '= "■"
        GETDEFCOLOR
        SETCOLOR RESULT
    CASE 1
        RESULTS '= "□"
        GETDEFCOLOR
        SETCOLOR RESULT
    CASE 2
        RESULTS '= "문"
        IF D3D_CURRENT_MAPDATA:XCOORD:YCOORD == 32
            SETCOLOR D3D_EVENT_COLOR
        ELSE
            SETCOLOR D3D_DOOR_COLOR
        ENDIF
    CASE 3
        RESULTS '= "보"
        IF D3D_CURRENT_MAPDATA:XCOORD:YCOORD == 13
            GETDEFCOLOR
            SETCOLOR RESULT
        ELSE
            SETCOLOR D3D_TREASURE_COLOR
        ENDIF
    CASE 4
        RESULTS '= "！"
        SETCOLOR D3D_EVENT_COLOR
    CASE 5
        RESULTS '= "Ｘ"
        SETCOLOR D3D_FLOOR_COLOR
    CASE 6
        RESULTS '= "승"
        SETCOLOR D3D_STAIR_COLOR
    CASE 7
        RESULTS '= "강"
        SETCOLOR D3D_STAIR_COLOR
    CASE 8
        RESULTS '= "출"
        SETCOLOR D3D_EXIT_COLOR
ENDSELECT
RETURN 1

@D3D_MOVE_PLAYER(MOVEDIRECTION=-1)
#DIM DYNAMIC MOVEDIRECTION;현재 바라보는 방향을 0으로 둘때 이동할 방향
#DIM DYNAMIC CARDINAL,4,2
#DIM DYNAMIC T_CARDINAL,4 = 0,1,2,3
SIF MOVEDIRECTION == -1
    MOVEDIRECTION = D3D_PLAYER_DIRECTION

CARDINAL:0:0 = 0,-1
CARDINAL:1:0 = 1,0
CARDINAL:2:0 = 0,1
CARDINAL:3:0 = -1,0

SELECTCASE D3D_PLAYER_DIRECTION
    CASE 1
        T_CARDINAL:0 = 1,2,3,0
    CASE 2
        T_CARDINAL:0 = 2,3,0,1
    CASE 3
        T_CARDINAL:0 = 3,0,1,2
ENDSELECT
;맵 이탈 방지
{
    SIF (D3D_PLAYER_XCOORD+(CARDINAL:(T_CARDINAL:MOVEDIRECTION):0)) >= D3D_CURRENT_MAPXSIZE ||
    (D3D_PLAYER_YCOORD+(CARDINAL:(T_CARDINAL:MOVEDIRECTION):1)) >= D3D_CURRENT_MAPYSIZE ||
    (D3D_PLAYER_XCOORD+(CARDINAL:(T_CARDINAL:MOVEDIRECTION):0)) < 0 ||
    (D3D_PLAYER_YCOORD+(CARDINAL:(T_CARDINAL:MOVEDIRECTION):1)) < 0
}
    RETURN 0
SELECTCASE D3D_CURRENT_MAPDATA:(D3D_PLAYER_XCOORD+(CARDINAL:(T_CARDINAL:MOVEDIRECTION):0)):(D3D_PLAYER_YCOORD+(CARDINAL:(T_CARDINAL:MOVEDIRECTION):1))
    ;정면에서 문을 향해 이동할 경우 문을 여는 판정 후 이동은 하지 않는다
    CASE 2
        IF T_CARDINAL:MOVEDIRECTION == D3D_PLAYER_DIRECTION
            CALL DUNGEON_OPEN_DOOR(D3D_PLAYER_XCOORD+(CARDINAL:(T_CARDINAL:MOVEDIRECTION):0),D3D_PLAYER_YCOORD+(CARDINAL:(T_CARDINAL:MOVEDIRECTION):1))
            RETURN 0
        ENDIF
    CASE 3
        RETURN 0
ENDSELECT
;벽판정 후 이동방향에 벽이 있으면 0 반환
;벽판정의 반환값 4개는 이미 플레이어의 방향을 반영하고 있음
CALL D3D_CHECK_WALL(D3D_PLAYER_XCOORD, D3D_PLAYER_YCOORD)
SIF RESULT:MOVEDIRECTION
    RETURN 0

;SIF D3D_CAN_MOVE(D3D_PLAYER_COORD:0+CARDINAL:(T_CARDINAL:MOVEDIRECTION):0, D3D_PLAYER_COORD:1+CARDINAL:(T_CARDINAL:MOVEDIRECTION):1)
;   RETURN 0

D3D_PLAYER_XCOORD += CARDINAL:(T_CARDINAL:MOVEDIRECTION):0
D3D_PLAYER_YCOORD += CARDINAL:(T_CARDINAL:MOVEDIRECTION):1

;이동 시마다 자동으로 맵을 밝힌다
CALL D3D_BLACKSHEEPWALL(D3D_PLAYER_XCOORD,D3D_PLAYER_YCOORD)

;특정 좌표 진입 시 자동 이벤트
TRYCALLFORM DUNGEON{FLAG:탐색대상던전}_AUTO_EVENT,D3D_PLAYER_XCOORD,D3D_PLAYER_YCOORD

ENCOUNTER_TURN += 1

RETURN 1